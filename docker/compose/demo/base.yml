version: "3.7"

x-hub20_service: &hub20_service
  environment: &hub20_environment
    DJANGO_SETTINGS_MODULE: hub20.api.settings
    HUB20_DATA_FOLDER: /var/hub20
    HUB20_STATIC_ROOT: /var/hub20/static
    HUB20_BROKER_URL: redis://redis:6379/0
    HUB20_CACHE_BACKEND: django_redis.cache.RedisCache
    HUB20_CACHE_LOCATION: redis://redis:6379/1
    HUB20_CHANNEL_LAYER_HOST: redis
    HUB20_CORS_HEADERS_ENABLED: 1
    HUB20_DATABASE_HOST: db
    HUB20_DATABASE_PORT: 5432
    HUB20_DATABASE_NAME: "${HUB20_DATABASE_NAME:-hub20}"
    HUB20_DATABASE_USER: "${HUB20_DATABASE_USER:-hub20}"
    HUB20_EMAIL_BACKEND: django.core.mail.backends.console.EmailBackend
    HUB20_ETHEREUM_ACCOUNT_MODEL: "${HUB20_ETHEREUM_ACCOUNT_MODEL:-ethereum_money.HierarchicalDeterministicWallet}"
    HUB20_SERVE_OPENAPI_URLS: 1
  volumes:
    - static-data:/var/hub20/static

services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"

    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.watch=true"
      - "--providers.docker.network=backbone"
      - "--certificatesresolvers.hub20_http_resolver.acme.email=${ACME_ACCOUNT_EMAIL}"
      - "--certificatesresolvers.hub20_http_resolver.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.hub20_http_resolver.acme.httpchallenge.entrypoint=web"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - traefik-data:/etc/traefik
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  static_file_server:
    image: caddy
    command: "caddy file-server --root /static --browse"

    labels:
      - traefik.enable=true
      - "traefik.http.routers.hub20_assets.rule=Host(`${HUB20_HOST_DOMAIN}`) && PathPrefix(`/static`)"
      - traefik.http.routers.hub20_assets.entrypoints=web,websecure
      - traefik.http.routers.hub20_assets.tls=true
      - traefik.http.routers.hub20_assets.tls.certresolver=hub20_http_resolver
      - "traefik.http.routers.hub20_assets.tls.domains[0].main=${HUB20_HOST_DOMAIN}"
      - traefik.http.routers.hub20_assets.middlewares=hub20_assets-https
      - traefik.http.routers.hub20_assets.middlewares=hub20_assets-stripprefix
      - traefik.http.middlewares.hub20_assets-https.redirectscheme.scheme=https
      - traefik.http.middlewares.hub20_assets-stripprefix.stripprefix.prefixes=/static
      - traefik.http.services.hub20_assets.loadbalancer.server.port=80

    volumes:
      - static-data:/static

  db:
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Admin backend
  admin:
    <<: *hub20_service
    environment:
      <<: *hub20_environment
      HUB20_URLCONF_MODULE: hub20.admin.urls

    command: >
      /bin/bash -c '
        django-admin collectstatic --noinput
        uvicorn hub20.api.asgi:application --port 8081 --host 0.0.0.0 --root-path="/admin"
      '

    labels:
      - traefik.enable=true
      - traefik.http.middlewares.hub20_admin-https.redirectscheme.scheme=https
      - "traefik.http.routers.hub20_admin.rule=Host(`${HUB20_HOST_DOMAIN}`) && PathPrefix(`/admin`)"
      - traefik.http.routers.hub20_admin.entrypoints=web,websecure
      - traefik.http.routers.hub20_admin.tls=true
      - traefik.http.routers.hub20_admin.tls.certresolver=hub20_http_resolver
      - "traefik.http.routers.hub20_admin.tls.domains[0].main=${HUB20_HOST_DOMAIN}"
      - traefik.http.routers.hub20_admin.middlewares=hub20_admin-https
      - traefik.http.services.hub20_admin.loadbalancer.server.port=8081

  # Web API
  web:
    <<: *hub20_service
    command: >
      /bin/bash -c "
        django-admin collectstatic --noinput
        uvicorn hub20.api.asgi:application --port 8080 --host 0.0.0.0 --proxy-headers
      "

    labels:
      - traefik.enable=true
      - traefik.http.middlewares.hub20-https.redirectscheme.scheme=https
      - "traefik.http.routers.hub20.rule=Host(`${HUB20_HOST_DOMAIN}`)"
      - traefik.http.routers.hub20.entrypoints=web,websecure
      - traefik.http.routers.hub20.tls=true
      - traefik.http.routers.hub20.tls.certresolver=hub20_http_resolver
      - "traefik.http.routers.hub20.tls.domains[0].main=${HUB20_HOST_DOMAIN}"
      - traefik.http.routers.hub20.middlewares=hub20-https
      - traefik.http.services.hub20.loadbalancer.server.port=8080

  # Celery app
  celery:
    <<: *hub20_service

  # Celery beat (periodic tasks)
  celery_beat:
    <<: *hub20_service

  # Background command to listen to blockchain and raiden events
  event_publisher:
    <<: *hub20_service


networks:
  default:
    name: backbone
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: hub20_backbone

volumes:
  traefik-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${TRAEFIK_DATA_STORAGE_PATH:-/srv/traefik}

  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${POSTGRES_DATA_STORAGE_PATH:-/srv/postgresql}

  static-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WEB_DATA_STORAGE_PATH:-/var/www/hub20}
